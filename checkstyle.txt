Starting audit...
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\ActionFactory.java:3:19: Using the '.*' form of import should be avoided - action.type.*. [AvoidStarImport]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\MovieActions.java:11:35: Using the '.*' form of import should be avoided - constansts.Constants.*. [AvoidStarImport]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\MovieActions.java:104:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\MovieActions.java:159:9: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\type\BackAction.java:28: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\type\ChangePageAction.java:63: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\type\ChangePageAction.java:78:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\type\DatabaseAction.java:42:27: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\type\DatabaseAction.java:57:30: Parameter output should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\type\OnPageAction.java:116: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\type\OnPageAction.java:248: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\action\type\OnPageAction.java:249: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\currentPosition\CurrentPosition.java:1:9: Name 'currentPosition' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:15:21: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:15:39: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:20:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:24:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:24:27: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:28:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:32:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:32:26: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:36:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getSubscribersToGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getSubscribersToGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:36:51: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\database\Database.java:41:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\io\ActionInput.java:101:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\io\ActionInput.java:105:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\io\ActionInput.java:105:36: Parameter subscribedGenre should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\io\ActionInput.java:199:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\io\ActionInput.java:203:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\io\ActionInput.java:207:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'getDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'getDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\io\ActionInput.java:211:5: Class 'ActionInput' looks like designed for extension (can be subclassed), but the method 'setDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ActionInput' final or making the method 'setDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\io\Output.java:34:19: Parameter error should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\pages\Page.java:3:19: Using the '.*' form of import should be avoided - pages.types.*. [AvoidStarImport]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\pages\Page.java:70:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'getPreviousPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'getPreviousPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\pages\Page.java:74:5: Class 'Page' looks like designed for extension (can be subclassed), but the method 'setPreviousPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Page' final or making the method 'setPreviousPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\pages\Page.java:74:33: Parameter previousPage should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\Test.java:158: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\Test.java:206:65: Parameter testFileName should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\Test.java:222: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Notification.java:10:25: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Notification.java:10:43: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Notification.java:15:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Notification.java:19:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Notification.java:19:30: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Notification.java:23:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Notification.java:27:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Notification.java:27:28: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\PremiumUser.java:17:5: Class 'PremiumUser' looks like designed for extension (can be subclassed), but the method 'refund' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PremiumUser' final or making the method 'refund' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:14:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'getMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'getMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:18:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'setMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'setMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:18:30: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:22:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:26:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:26:27: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:30:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:31:27: Parameter o should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:32:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:33:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\Ratings.java:38:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\StandardUser.java:17:5: Class 'StandardUser' looks like designed for extension (can be subclassed), but the method 'refund' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StandardUser' final or making the method 'refund' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:62:17: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:197:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:201:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:201:34: Parameter notifications should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:205:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:209:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setSubscribedGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:209:37: Parameter subscribedGenres should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:213:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:217:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:217:28: Parameter ratings should be final. [FinalParameters]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:228:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'incrementNumberOfFreeMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'incrementNumberOfFreeMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:228:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:241:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'incrementTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'incrementTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:241:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:245:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'removeMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'removeMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:245:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\Iulia\IdeaProjects\proiect2\.\src\user\User.java:252:5: Missing a Javadoc comment. [MissingJavadocMethod]
Audit done.
Checkstyle ends with 80 errors.
